{"ast":null,"code":"var _jsxFileName = \"/home/unnati/Downloads/react-project/react-assignment/src/App.js\",\n  _s = $RefreshSig$();\n// // src/App.js\n\n// import React, { useState, useMemo } from 'react'; // Import React and the 'useState' hook\n// import './App.css'; // We will create this CSS file later\n\n// // 1. IMPORT YOUR DATA\n// // Make sure the path matches the file you created in Step 2\n// import { campaignList } from './campaignData'; \n\n// // --- (We will add Header, Tabs, and CampaignList imports here later) ---\n\n// function App() {\n\n//   // 2. SET UP STATE\n//   // This 'useState' hook creates a state variable to track the active tab.\n//   // 'activeTab' holds the current value (we'll start it at 'upcoming').\n//   // 'setActiveTab' is the *function* we use to change that value.\n//   const [activeTab, setActiveTab] = useState('upcoming');\n\n//   // We need today's date to know what is \"past\", \"live\", or \"upcoming\".\n//   // We define it here so the filter logic can use it.\n//   const today = new Date();\n\n//   // 3. FILTERING LOGIC\n//   // This is where the \"magic\" happens. We will filter the 'campaignList'\n//   // based on the 'activeTab' state.\n//   // (We are leaving this simple for now and will add the full logic later)\n//   const filteredCampaigns = useMemo(() => {\n\n//     // For now, let's just return the whole list so we can see it.\n//     console.log(\"Filtering for:\", activeTab); // You can check this in your browser console\n//     return campaignList; \n\n//     // ---- LATER, we will replace the line above with real logic like this: ----\n//     //\n//     // if (activeTab === 'upcoming') {\n//     //   return campaignList.filter(campaign => ... );\n//     // } else if (activeTab === 'live') {\n//     //   return campaignList.filter(campaign => ... );\n//     // } else { // past\n//     //   return campaignList.filter(campaign => ... );\n//     // }\n\n//   }, [activeTab]); // This 'useMemo' hook re-runs this logic ONLY when 'activeTab' changes.\n\n//   // 4. THE LAYOUT (JSX)\n//   // This is what renders to the page.\n//   return (\n//     <div className=\"app-container\">\n//       {/* <Header /> */} {/* We will uncomment this when we build the Header */}\n\n//       <main className=\"content-area\">\n//         <h1 className=\"main-title\">Manage Campaigns</h1>\n\n//         {/* We will replace this div with our <Tabs /> component soon */}\n//         <div style={{ marginBottom: '20px', border: '1px dashed red' }}>\n//           <p>Tabs will go here. Current active tab: <strong>{activeTab}</strong></p>\n//           {/* These buttons are temporary! They let us test our state. */}\n//           <button onClick={() => setActiveTab('upcoming')}>Upcoming</button>\n//           <button onClick={() => setActiveTab('live')}>Live</button>\n//           <button onClick={() => setActiveTab('past')}>Past</button>\n//         </div>\n\n//         {/* We will replace this div with our <CampaignList /> component soon */}\n//         <div style={{ border: '1px dashed blue' }}>\n//           <p>Campaign List will go here. Showing {filteredCampaigns.length} items.</p>\n//         </div>\n\n//       </main>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useMemo } from 'react';\nimport './App.css';\nimport { campaignList } from './campaignData';\nimport Header from './components/Header';\nimport Tabs from './components/Tabs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [activeTab, setActiveTab] = useState('upcoming');\n  const today = new Date();\n  const filteredCampaigns = useMemo(() => {\n    console.log(\"Filtering for:\", activeTab);\n    return campaignList;\n  }, [activeTab]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"main-title\",\n        children: \"Manage Campaigns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        activeTab: activeTab,\n        onTabChange: setActiveTab\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px dashed blue'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Campaign List will go here. Showing \", filteredCampaigns.length, \" items.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"51pxwLhK4IBTvYzn5WyELsk4ru8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useMemo","campaignList","Header","Tabs","jsxDEV","_jsxDEV","App","_s","activeTab","setActiveTab","today","Date","filteredCampaigns","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onTabChange","style","border","length","_c","$RefreshReg$"],"sources":["/home/unnati/Downloads/react-project/react-assignment/src/App.js"],"sourcesContent":["// // src/App.js\n\n// import React, { useState, useMemo } from 'react'; // Import React and the 'useState' hook\n// import './App.css'; // We will create this CSS file later\n\n// // 1. IMPORT YOUR DATA\n// // Make sure the path matches the file you created in Step 2\n// import { campaignList } from './campaignData'; \n\n// // --- (We will add Header, Tabs, and CampaignList imports here later) ---\n\n\n// function App() {\n\n//   // 2. SET UP STATE\n//   // This 'useState' hook creates a state variable to track the active tab.\n//   // 'activeTab' holds the current value (we'll start it at 'upcoming').\n//   // 'setActiveTab' is the *function* we use to change that value.\n//   const [activeTab, setActiveTab] = useState('upcoming');\n\n//   // We need today's date to know what is \"past\", \"live\", or \"upcoming\".\n//   // We define it here so the filter logic can use it.\n//   const today = new Date();\n\n\n//   // 3. FILTERING LOGIC\n//   // This is where the \"magic\" happens. We will filter the 'campaignList'\n//   // based on the 'activeTab' state.\n//   // (We are leaving this simple for now and will add the full logic later)\n//   const filteredCampaigns = useMemo(() => {\n    \n//     // For now, let's just return the whole list so we can see it.\n//     console.log(\"Filtering for:\", activeTab); // You can check this in your browser console\n//     return campaignList; \n    \n//     // ---- LATER, we will replace the line above with real logic like this: ----\n//     //\n//     // if (activeTab === 'upcoming') {\n//     //   return campaignList.filter(campaign => ... );\n//     // } else if (activeTab === 'live') {\n//     //   return campaignList.filter(campaign => ... );\n//     // } else { // past\n//     //   return campaignList.filter(campaign => ... );\n//     // }\n\n//   }, [activeTab]); // This 'useMemo' hook re-runs this logic ONLY when 'activeTab' changes.\n\n\n//   // 4. THE LAYOUT (JSX)\n//   // This is what renders to the page.\n//   return (\n//     <div className=\"app-container\">\n//       {/* <Header /> */} {/* We will uncomment this when we build the Header */}\n      \n//       <main className=\"content-area\">\n//         <h1 className=\"main-title\">Manage Campaigns</h1>\n        \n//         {/* We will replace this div with our <Tabs /> component soon */}\n//         <div style={{ marginBottom: '20px', border: '1px dashed red' }}>\n//           <p>Tabs will go here. Current active tab: <strong>{activeTab}</strong></p>\n//           {/* These buttons are temporary! They let us test our state. */}\n//           <button onClick={() => setActiveTab('upcoming')}>Upcoming</button>\n//           <button onClick={() => setActiveTab('live')}>Live</button>\n//           <button onClick={() => setActiveTab('past')}>Past</button>\n//         </div>\n\n//         {/* We will replace this div with our <CampaignList /> component soon */}\n//         <div style={{ border: '1px dashed blue' }}>\n//           <p>Campaign List will go here. Showing {filteredCampaigns.length} items.</p>\n//         </div>\n\n//       </main>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useState, useMemo } from 'react';\nimport './App.css';\nimport { campaignList } from './campaignData'; \nimport Header from './components/Header';\nimport Tabs from './components/Tabs';\n\nfunction App() {\n  const [activeTab, setActiveTab] = useState('upcoming');\n  const today = new Date();\n\n  const filteredCampaigns = useMemo(() => {\n    console.log(\"Filtering for:\", activeTab); \n    return campaignList; \n  }, [activeTab]);\n\n  return (\n    <div className=\"app-container\">\n      <Header />\n      \n      <main className=\"content-area\">\n        <h1 className=\"main-title\">Manage Campaigns</h1>\n        \n        <Tabs activeTab={activeTab} onTabChange={setActiveTab} />\n\n        <div style={{ border: '1px dashed blue' }}>\n          <p>Campaign List will go here. Showing {filteredCampaigns.length} items.</p>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAuBA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAChD,OAAO,WAAW;AAClB,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,UAAU,CAAC;EACtD,MAAMW,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EAExB,MAAMC,iBAAiB,GAAGZ,OAAO,CAAC,MAAM;IACtCa,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEN,SAAS,CAAC;IACxC,OAAOP,YAAY;EACrB,CAAC,EAAE,CAACO,SAAS,CAAC,CAAC;EAEf,oBACEH,OAAA;IAAKU,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BX,OAAA,CAACH,MAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEVf,OAAA;MAAMU,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC5BX,OAAA;QAAIU,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEhDf,OAAA,CAACF,IAAI;QAACK,SAAS,EAAEA,SAAU;QAACa,WAAW,EAAEZ;MAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEzDf,OAAA;QAAKiB,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAkB,CAAE;QAAAP,QAAA,eACxCX,OAAA;UAAAW,QAAA,GAAG,sCAAoC,EAACJ,iBAAiB,CAACY,MAAM,EAAC,SAAO;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACb,EAAA,CAxBQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}