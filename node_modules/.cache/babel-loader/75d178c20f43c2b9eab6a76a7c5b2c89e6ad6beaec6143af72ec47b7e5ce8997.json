{"ast":null,"code":"import _objectSpread from\"/home/unnati/Downloads/react-project/react-assignment2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import'./App.css';import{userList}from'./userData';import Navbar from'./components/Navbar';import UserGrid from'./components/UserGrid';import EditModal from'./components/EditModal';// <-- Import the new modal\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// The user list is now in state, so it can be changed\nconst[users,setUsers]=useState(userList);// State for managing the modal\nconst[isModalOpen,setIsModalOpen]=useState(false);const[editingUser,setEditingUser]=useState(null);// --- Logic Functions ---\nconst handleLike=id=>{setUsers(currentUsers=>currentUsers.map(user=>user.id===id?_objectSpread(_objectSpread({},user),{},{isLiked:!user.isLiked}):user));};const handleDelete=id=>{setUsers(currentUsers=>currentUsers.filter(user=>user.id!==id));};// This function is called by UserCard to open the modal\nconst handleEditOpen=user=>{setEditingUser(user);setIsModalOpen(true);};// This function is called by the modal to close it\nconst handleModalClose=()=>{setIsModalOpen(false);setEditingUser(null);};// This function is called by the modal to save changes\nconst handleEditSave=updatedUser=>{setUsers(currentUsers=>currentUsers.map(user=>user.id===updatedUser.id?updatedUser:user));handleModalClose();// Close the modal after saving\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"main\",{className:\"content-area\",children:/*#__PURE__*/_jsx(UserGrid,{users:users,onLike:handleLike,onDelete:handleDelete,onEdit:handleEditOpen})}),/*#__PURE__*/_jsx(EditModal,{isOpen:isModalOpen,user:editingUser,onClose:handleModalClose,onSave:handleEditSave})]});}export default App;","map":{"version":3,"names":["React","useState","userList","Navbar","UserGrid","EditModal","jsx","_jsx","jsxs","_jsxs","App","users","setUsers","isModalOpen","setIsModalOpen","editingUser","setEditingUser","handleLike","id","currentUsers","map","user","_objectSpread","isLiked","handleDelete","filter","handleEditOpen","handleModalClose","handleEditSave","updatedUser","className","children","onLike","onDelete","onEdit","isOpen","onClose","onSave"],"sources":["/home/unnati/Downloads/react-project/react-assignment2/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { userList } from './userData'; \nimport Navbar from './components/Navbar';\nimport UserGrid from './components/UserGrid';\nimport EditModal from './components/EditModal'; // <-- Import the new modal\n\nfunction App() {\n  // The user list is now in state, so it can be changed\n  const [users, setUsers] = useState(userList);\n  \n  // State for managing the modal\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingUser, setEditingUser] = useState(null);\n\n  // --- Logic Functions ---\n\n  const handleLike = (id) => {\n    setUsers(currentUsers => \n      currentUsers.map(user =>\n        user.id === id ? { ...user, isLiked: !user.isLiked } : user\n      )\n    );\n  };\n\n  const handleDelete = (id) => {\n    setUsers(currentUsers =>\n      currentUsers.filter(user => user.id !== id)\n    );\n  };\n  \n  // This function is called by UserCard to open the modal\n  const handleEditOpen = (user) => {\n    setEditingUser(user);\n    setIsModalOpen(true);\n  };\n\n  // This function is called by the modal to close it\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n    setEditingUser(null);\n  };\n\n  // This function is called by the modal to save changes\n  const handleEditSave = (updatedUser) => {\n    setUsers(currentUsers =>\n      currentUsers.map(user =>\n        user.id === updatedUser.id ? updatedUser : user\n      )\n    );\n    handleModalClose(); // Close the modal after saving\n  };\n\n  return (\n    <div className=\"app-container\">\n      <Navbar />\n      \n      <main className=\"content-area\">\n        <UserGrid \n          users={users} \n          onLike={handleLike}\n          onDelete={handleDelete}\n          onEdit={handleEditOpen}\n        />\n      </main>\n\n      {/* Render the modal component. It's hidden by default. */}\n      <EditModal\n        isOpen={isModalOpen}\n        user={editingUser}\n        onClose={handleModalClose}\n        onSave={handleEditSave}\n      />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"2IAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,WAAW,CAClB,OAASC,QAAQ,KAAQ,YAAY,CACrC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb;AACA,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAACC,QAAQ,CAAC,CAE5C;AACA,KAAM,CAACW,WAAW,CAAEC,cAAc,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACc,WAAW,CAAEC,cAAc,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAEpD;AAEA,KAAM,CAAAgB,UAAU,CAAIC,EAAE,EAAK,CACzBN,QAAQ,CAACO,YAAY,EACnBA,YAAY,CAACC,GAAG,CAACC,IAAI,EACnBA,IAAI,CAACH,EAAE,GAAKA,EAAE,CAAAI,aAAA,CAAAA,aAAA,IAAQD,IAAI,MAAEE,OAAO,CAAE,CAACF,IAAI,CAACE,OAAO,GAAKF,IACzD,CACF,CAAC,CACH,CAAC,CAED,KAAM,CAAAG,YAAY,CAAIN,EAAE,EAAK,CAC3BN,QAAQ,CAACO,YAAY,EACnBA,YAAY,CAACM,MAAM,CAACJ,IAAI,EAAIA,IAAI,CAACH,EAAE,GAAKA,EAAE,CAC5C,CAAC,CACH,CAAC,CAED;AACA,KAAM,CAAAQ,cAAc,CAAIL,IAAI,EAAK,CAC/BL,cAAc,CAACK,IAAI,CAAC,CACpBP,cAAc,CAAC,IAAI,CAAC,CACtB,CAAC,CAED;AACA,KAAM,CAAAa,gBAAgB,CAAGA,CAAA,GAAM,CAC7Bb,cAAc,CAAC,KAAK,CAAC,CACrBE,cAAc,CAAC,IAAI,CAAC,CACtB,CAAC,CAED;AACA,KAAM,CAAAY,cAAc,CAAIC,WAAW,EAAK,CACtCjB,QAAQ,CAACO,YAAY,EACnBA,YAAY,CAACC,GAAG,CAACC,IAAI,EACnBA,IAAI,CAACH,EAAE,GAAKW,WAAW,CAACX,EAAE,CAAGW,WAAW,CAAGR,IAC7C,CACF,CAAC,CACDM,gBAAgB,CAAC,CAAC,CAAE;AACtB,CAAC,CAED,mBACElB,KAAA,QAAKqB,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BxB,IAAA,CAACJ,MAAM,GAAE,CAAC,cAEVI,IAAA,SAAMuB,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC5BxB,IAAA,CAACH,QAAQ,EACPO,KAAK,CAAEA,KAAM,CACbqB,MAAM,CAAEf,UAAW,CACnBgB,QAAQ,CAAET,YAAa,CACvBU,MAAM,CAAER,cAAe,CACxB,CAAC,CACE,CAAC,cAGPnB,IAAA,CAACF,SAAS,EACR8B,MAAM,CAAEtB,WAAY,CACpBQ,IAAI,CAAEN,WAAY,CAClBqB,OAAO,CAAET,gBAAiB,CAC1BU,MAAM,CAAET,cAAe,CACxB,CAAC,EACC,CAAC,CAEV,CAEA,cAAe,CAAAlB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}