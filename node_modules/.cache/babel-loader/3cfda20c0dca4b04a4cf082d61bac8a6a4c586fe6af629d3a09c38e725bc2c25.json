{"ast":null,"code":"var _jsxFileName = \"/home/unnati/Downloads/react-project/react-assignment/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useState, useMemo } from 'react'; // Import React and the 'useState' hook\nimport './App.css'; // We will create this CSS file later\n\n// 1. IMPORT YOUR DATA\n// Make sure the path matches the file you created in Step 2\nimport { campaignList } from './campaignData';\n\n// --- (We will add Header, Tabs, and CampaignList imports here later) ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // 2. SET UP STATE\n  // This 'useState' hook creates a state variable to track the active tab.\n  // 'activeTab' holds the current value (we'll start it at 'upcoming').\n  // 'setActiveTab' is the *function* we use to change that value.\n  const [activeTab, setActiveTab] = useState('upcoming');\n\n  // We need today's date to know what is \"past\", \"live\", or \"upcoming\".\n  // We define it here so the filter logic can use it.\n  const today = new Date();\n\n  // 3. FILTERING LOGIC\n  // This is where the \"magic\" happens. We will filter the 'campaignList'\n  // based on the 'activeTab' state.\n  // (We are leaving this simple for now and will add the full logic later)\n  const filteredCampaigns = useMemo(() => {\n    // For now, let's just return the whole list so we can see it.\n    console.log(\"Filtering for:\", activeTab); // You can check this in your browser console\n    return campaignList;\n\n    // ---- LATER, we will replace the line above with real logic like this: ----\n    //\n    // if (activeTab === 'upcoming') {\n    //   return campaignList.filter(campaign => ... );\n    // } else if (activeTab === 'live') {\n    //   return campaignList.filter(campaign => ... );\n    // } else { // past\n    //   return campaignList.filter(campaign => ... );\n    // }\n  }, [activeTab]); // This 'useMemo' hook re-runs this logic ONLY when 'activeTab' changes.\n\n  // 4. THE LAYOUT (JSX)\n  // This is what renders to the page.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"main-title\",\n        children: \"Manage Campaigns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px',\n          border: '1px dashed red'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Tabs will go here. Current active tab: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: activeTab\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 53\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveTab('upcoming'),\n          children: \"Upcoming\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveTab('live'),\n          children: \"Live\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveTab('past'),\n          children: \"Past\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px dashed blue'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Campaign List will go here. Showing \", filteredCampaigns.length, \" items.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"51pxwLhK4IBTvYzn5WyELsk4ru8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useMemo","campaignList","jsxDEV","_jsxDEV","App","_s","activeTab","setActiveTab","today","Date","filteredCampaigns","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","border","onClick","length","_c","$RefreshReg$"],"sources":["/home/unnati/Downloads/react-project/react-assignment/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React, { useState, useMemo } from 'react'; // Import React and the 'useState' hook\nimport './App.css'; // We will create this CSS file later\n\n// 1. IMPORT YOUR DATA\n// Make sure the path matches the file you created in Step 2\nimport { campaignList } from './campaignData'; \n\n// --- (We will add Header, Tabs, and CampaignList imports here later) ---\n\n\nfunction App() {\n\n  // 2. SET UP STATE\n  // This 'useState' hook creates a state variable to track the active tab.\n  // 'activeTab' holds the current value (we'll start it at 'upcoming').\n  // 'setActiveTab' is the *function* we use to change that value.\n  const [activeTab, setActiveTab] = useState('upcoming');\n\n  // We need today's date to know what is \"past\", \"live\", or \"upcoming\".\n  // We define it here so the filter logic can use it.\n  const today = new Date();\n\n\n  // 3. FILTERING LOGIC\n  // This is where the \"magic\" happens. We will filter the 'campaignList'\n  // based on the 'activeTab' state.\n  // (We are leaving this simple for now and will add the full logic later)\n  const filteredCampaigns = useMemo(() => {\n    \n    // For now, let's just return the whole list so we can see it.\n    console.log(\"Filtering for:\", activeTab); // You can check this in your browser console\n    return campaignList; \n    \n    // ---- LATER, we will replace the line above with real logic like this: ----\n    //\n    // if (activeTab === 'upcoming') {\n    //   return campaignList.filter(campaign => ... );\n    // } else if (activeTab === 'live') {\n    //   return campaignList.filter(campaign => ... );\n    // } else { // past\n    //   return campaignList.filter(campaign => ... );\n    // }\n\n  }, [activeTab]); // This 'useMemo' hook re-runs this logic ONLY when 'activeTab' changes.\n\n\n  // 4. THE LAYOUT (JSX)\n  // This is what renders to the page.\n  return (\n    <div className=\"app-container\">\n      {/* <Header /> */} {/* We will uncomment this when we build the Header */}\n      \n      <main className=\"content-area\">\n        <h1 className=\"main-title\">Manage Campaigns</h1>\n        \n        {/* We will replace this div with our <Tabs /> component soon */}\n        <div style={{ marginBottom: '20px', border: '1px dashed red' }}>\n          <p>Tabs will go here. Current active tab: <strong>{activeTab}</strong></p>\n          {/* These buttons are temporary! They let us test our state. */}\n          <button onClick={() => setActiveTab('upcoming')}>Upcoming</button>\n          <button onClick={() => setActiveTab('live')}>Live</button>\n          <button onClick={() => setActiveTab('past')}>Past</button>\n        </div>\n\n        {/* We will replace this div with our <CampaignList /> component soon */}\n        <div style={{ border: '1px dashed blue' }}>\n          <p>Campaign List will go here. Showing {filteredCampaigns.length} items.</p>\n        </div>\n\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}