{"ast":null,"code":"// src/campaignData.js\n\n// --- Date Helpers ---\n// We use .getTime() to get a number, which is easy to compare.\n\n// 1. Get a timestamp for right now (for \"Live\" campaigns)\nconst today = new Date().getTime();\n\n// 2. Get a timestamp for the past (e.g., 3 days ago)\n//    (milliseconds * seconds * minutes * hours * days)\nconst pastDate = new Date().setDate(new Date().getDate() - 3);\n\n// 3. Get a timestamp for the future (e.g., 5 days from now)\nconst futureDate = new Date().setDate(new Date().getDate() + 5);\n\n// --- Data Array ---\n// This is what your app will import.\nexport const campaignList = [{\n  id: 1,\n  name: \"Holiday Sale (Future)\",\n  region: \"US\",\n  createdOn: futureDate,\n  // Use the future variable\n  price: {\n    name: \"Pricing 1\",\n    amount: \"$ 100\"\n  },\n  csv: \"path/to/csv1.csv\",\n  report: \"path/to/report1.pdf\",\n  image_url: \"https://via.placeholder.com/40/FF5733/FFFFFF?text=H\"\n}, {\n  id: 2,\n  name: \"Black Friday (Live)\",\n  region: \"CA, US\",\n  createdOn: today,\n  // Use the today variable\n  price: {\n    name: \"Pricing 2\",\n    amount: \"$ 250\"\n  },\n  csv: \"path/to/csv2.csv\",\n  report: \"path/to/report2.pdf\",\n  image_url: \"https://via.placeholder.com/40/33FF57/FFFFFF?text=B\"\n}, {\n  id: 3,\n  name: \"Summer Kick-off (Past)\",\n  region: \"FR\",\n  createdOn: pastDate,\n  // Use the past variable\n  price: {\n    name: \"Pricing 3\",\n    amount: \"$ 50\"\n  },\n  csv: \"path/to/csv3.csv\",\n  report: \"path/to/report3.pdf\",\n  image_url: \"https://via.placeholder.com/40/3357FF/FFFFFF?text=S\"\n}\n\n// TODO: Add 2-3 more campaigns here yourself.\n// Use 'today', 'pastDate', 'futureDate' or create new ones!\n];","map":{"version":3,"names":["today","Date","getTime","pastDate","setDate","getDate","futureDate","campaignList","id","name","region","createdOn","price","amount","csv","report","image_url"],"sources":["/home/unnati/Downloads/react-project/react-assignment/src/campaignData.js"],"sourcesContent":["// src/campaignData.js\n\n// --- Date Helpers ---\n// We use .getTime() to get a number, which is easy to compare.\n\n// 1. Get a timestamp for right now (for \"Live\" campaigns)\nconst today = new Date().getTime();\n\n// 2. Get a timestamp for the past (e.g., 3 days ago)\n//    (milliseconds * seconds * minutes * hours * days)\nconst pastDate = new Date().setDate(new Date().getDate() - 3);\n\n// 3. Get a timestamp for the future (e.g., 5 days from now)\nconst futureDate = new Date().setDate(new Date().getDate() + 5);\n\n// --- Data Array ---\n// This is what your app will import.\nexport const campaignList = [\n  {\n    id: 1,\n    name: \"Holiday Sale (Future)\",\n    region: \"US\",\n    createdOn: futureDate, // Use the future variable\n    price: { name: \"Pricing 1\", amount: \"$ 100\" },\n    csv: \"path/to/csv1.csv\",\n    report: \"path/to/report1.pdf\",\n    image_url: \"https://via.placeholder.com/40/FF5733/FFFFFF?text=H\"\n  },\n  {\n    id: 2,\n    name: \"Black Friday (Live)\",\n    region: \"CA, US\",\n    createdOn: today, // Use the today variable\n    price: { name: \"Pricing 2\", amount: \"$ 250\" },\n    csv: \"path/to/csv2.csv\",\n    report: \"path/to/report2.pdf\",\n    image_url: \"https://via.placeholder.com/40/33FF57/FFFFFF?text=B\"\n  },\n  {\n    id: 3,\n    name: \"Summer Kick-off (Past)\",\n    region: \"FR\",\n    createdOn: pastDate, // Use the past variable\n    price: { name: \"Pricing 3\", amount: \"$ 50\" },\n    csv: \"path/to/csv3.csv\",\n    report: \"path/to/report3.pdf\",\n    image_url: \"https://via.placeholder.com/40/3357FF/FFFFFF?text=S\"\n  },\n  \n  // TODO: Add 2-3 more campaigns here yourself.\n  // Use 'today', 'pastDate', 'futureDate' or create new ones!\n];"],"mappings":"AAAA;;AAEA;AACA;;AAEA;AACA,MAAMA,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;;AAElC;AACA;AACA,MAAMC,QAAQ,GAAG,IAAIF,IAAI,CAAC,CAAC,CAACG,OAAO,CAAC,IAAIH,IAAI,CAAC,CAAC,CAACI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;;AAE7D;AACA,MAAMC,UAAU,GAAG,IAAIL,IAAI,CAAC,CAAC,CAACG,OAAO,CAAC,IAAIH,IAAI,CAAC,CAAC,CAACI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;;AAE/D;AACA;AACA,OAAO,MAAME,YAAY,GAAG,CAC1B;EACEC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,uBAAuB;EAC7BC,MAAM,EAAE,IAAI;EACZC,SAAS,EAAEL,UAAU;EAAE;EACvBM,KAAK,EAAE;IAAEH,IAAI,EAAE,WAAW;IAAEI,MAAM,EAAE;EAAQ,CAAC;EAC7CC,GAAG,EAAE,kBAAkB;EACvBC,MAAM,EAAE,qBAAqB;EAC7BC,SAAS,EAAE;AACb,CAAC,EACD;EACER,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,qBAAqB;EAC3BC,MAAM,EAAE,QAAQ;EAChBC,SAAS,EAAEX,KAAK;EAAE;EAClBY,KAAK,EAAE;IAAEH,IAAI,EAAE,WAAW;IAAEI,MAAM,EAAE;EAAQ,CAAC;EAC7CC,GAAG,EAAE,kBAAkB;EACvBC,MAAM,EAAE,qBAAqB;EAC7BC,SAAS,EAAE;AACb,CAAC,EACD;EACER,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,wBAAwB;EAC9BC,MAAM,EAAE,IAAI;EACZC,SAAS,EAAER,QAAQ;EAAE;EACrBS,KAAK,EAAE;IAAEH,IAAI,EAAE,WAAW;IAAEI,MAAM,EAAE;EAAO,CAAC;EAC5CC,GAAG,EAAE,kBAAkB;EACvBC,MAAM,EAAE,qBAAqB;EAC7BC,SAAS,EAAE;AACb;;AAEA;AACA;AAAA,CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}